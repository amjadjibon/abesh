version: "1"

capabilities:
  - contract_id: "abesh:pprof"
  - contract_id: "abesh:httpclient"
  - contract_id: "abesh:health"
  - contract_id: "abesh:httpserver"
    values:
      host: "0.0.0.0"
      port: "9090"
      default_request_timeout: "5s"

  - contract_id: "abesh:ex_authorizer"

  - contract_id: "abesh:ex_event_consumer"

  - contract_id: "abesh:ex_echo"
    values:
      key1: "test1"
      key2: "test2"

  - contract_id: "abesh:ex_err"
  - contract_id: "abesh:ex_httpclient"
    values:
      url: "https://jsonip.com"

  - contract_id: "abesh:ex_rpc"
    values:
      host: "0.0.0.0"
      port: "9091"

  - contract_id: "abesh:httpserver"
    new_contract_id: "abesh:httpserver:1"
    values:
      host: "0.0.0.0"
      port: "9092"
      default_request_timeout: "5s"
      default_content_type: "application/text"
      default_404_handler_enabled: "true"

  - contract_id: "abesh:ex_panic"

triggers:
  - trigger: "abesh:httpserver"
    trigger_values:
      method: "GET"
      path: "/default"
    service: "abesh:ex_echo"
    authorizer: "abesh:ex_authorizer"
    authorizer_expression: "allowAll"

  - trigger: "abesh:httpserver"
    trigger_values:
      method: "GET"
      path: "/echo"
    service: "abesh:ex_echo"
    authorizer: "abesh:ex_authorizer"
    authorizer_expression: "denyAll"

  - trigger: "abesh:httpserver"
    trigger_values:
      method: "GET"
      path: "/httpclient"
    service: "abesh:ex_httpclient"

  - trigger: "abesh:httpserver"
    trigger_values:
      method: "GET"
      path: "/err"
    service: "abesh:ex_err"

  - trigger: "abesh:httpserver:1"
    trigger_values:
      method: "GET"
      path: "/default1"
    service: "abesh:ex_echo"
    authorizer: "abesh:ex_authorizer"
    authorizer_expression: "allowAll"

  - trigger: "abesh:httpserver"
    trigger_values:
      method: "GET"
      path: "/panic"
    service: "abesh:ex_panic"

  - trigger: "abesh:httpserver"
    trigger_values:
      method: "GET"
      path: "/health"
    service: "abesh:health"

rpcs:
  - rpc: "abesh:ex_rpc"
    method: "/test.TestRPC/Allow"
    authorizer: "abesh:ex_authorizer"
    authorizer_expression: "allowAll"
  - rpc: "abesh:ex_rpc"
    method: "/test.TestRPC/Deny"
    authorizer: "abesh:ex_authorizer"
    authorizer_expression: "denyAll"

consumers:
  - source: "abesh:ex_echo"
    sink: "abesh:ex_event_consumer"

start:
  - "abesh:pprof"
  - "abesh:httpserver"
  - "abesh:httpserver:1"
  - "abesh:ex_rpc"
